Enter expression:
r(a(b(c()d(e(f()g(h())s())k())L()m())n())o())

Object Tree - Result:
r[r]
|--a[a]
|--|--b[b]
|--|--|--c[c]
|--|--|--d[d]
|--|--|--|--e[e]
|--|--|--|--|--f[f]
|--|--|--|--|--g[g]
|--|--|--|--|--|--h[h]
|--|--|--|--|--s[s]
|--|--|--|--k[k]
|--|--|--L[L]
|--|--|--m[m]
|--|--n[n]
|--o[o]

----------------------------------------------------------------
Enter expression:
r(a(b()c(d()e()f(g()h()i()j(k(0()9(@()))l()m()n(v()s()w()t())o(x()u()B(*())y(z(p(1(2(3(4(5())))))))6()7()8()))))))

Object Tree
r [r]
|--a [a]
|--|--b [b]
|--|--c [c]
|--|--|--d [d]
|--|--|--e [e]
|--|--|--f [f]
|--|--|--|--g [g]
|--|--|--|--h [h]
|--|--|--|--i [i]
|--|--|--|--j [j]
|--|--|--|--|--k [k]
|--|--|--|--|--|--0 [0]
|--|--|--|--|--|--9 [9]
|--|--|--|--|--|--|--@ [@]
|--|--|--|--|--l [l]
|--|--|--|--|--m [m]
|--|--|--|--|--n [n]
|--|--|--|--|--|--v [v]
|--|--|--|--|--|--s [s]
|--|--|--|--|--|--w [w]
|--|--|--|--|--|--t [t]
|--|--|--|--|--o [o]
|--|--|--|--|--|--x [x]
|--|--|--|--|--|--u [u]
|--|--|--|--|--|--B [B]
|--|--|--|--|--|--|--* [*]
|--|--|--|--|--|--y [y]
|--|--|--|--|--|--|--z [z]
|--|--|--|--|--|--|--|--p [p]
|--|--|--|--|--|--|--|--|--1 [1]
|--|--|--|--|--|--|--|--|--|--2 [2]
|--|--|--|--|--|--|--|--|--|--|--3 [3]
|--|--|--|--|--|--|--|--|--|--|--|--4 [4]
|--|--|--|--|--|--|--|--|--|--|--|--|--5 [5]
|--|--|--|--|--|--6 [6]
|--|--|--|--|--|--7 [7]
|--|--|--|--|--|--8 [8]

----------------------------------------------------------------
Permutations Tree for set [a,b,c]
Enter expression:
root(a(ab(abc())ac(acb()))b(ba(bac())bc(bca()))c(ca(cab())cb(cba())))

Object Tree - Result:
Algorithm used RECURSIVE DFS
root[root]
|--a[a]
|--|--ab[ab]
|--|--|--abc[abc]
|--|--ac[ac]
|--|--|--acb[acb]
|--b[b]
|--|--ba[ba]
|--|--|--bac[bac]
|--|--bc[bc]
|--|--|--bca[bca]
|--c[c]
|--|--ca[ca]
|--|--|--cab[cab]
|--|--cb[cb]
|--|--|--cba[cba]

----------------------------------------------------------------
Permutations Tree for set [a,b,c,d]
Enter expression:
root(a(ab(abc(abcd())abd(abdc()))ac(acb(acbd())acd(acdb()))ad(adb(adbc())adc(adcb())))b(ba(bac(bacd())bad(badc()))bc(bca(bcad())bcd(bcda()))bd(bda(bdac())bdc(bdca())))c(ca(cab(cabd())cad(cadb()))cb(cba(cbad())cbd(cbda()))cd(cda(cdab())cdb(cdba())))d(da(dab(dabc())dac(dacb()))db(dba(dbac())dbc(dbca()))dc(dca(dcab())dcb(dcba()))))

Object Tree - Result:
Algorithm used RECURSIVE DFS
root[root]
|--a[a]
|--|--ab[ab]
|--|--|--abc[abc]
|--|--|--|--abcd[abcd]
|--|--|--abd[abd]
|--|--|--|--abdc[abdc]
|--|--ac[ac]
|--|--|--acb[acb]
|--|--|--|--acbd[acbd]
|--|--|--acd[acd]
|--|--|--|--acdb[acdb]
|--|--ad[ad]
|--|--|--adb[adb]
|--|--|--|--adbc[adbc]
|--|--|--adc[adc]
|--|--|--|--adcb[adcb]
|--b[b]
|--|--ba[ba]
|--|--|--bac[bac]
|--|--|--|--bacd[bacd]
|--|--|--bad[bad]
|--|--|--|--badc[badc]
|--|--bc[bc]
|--|--|--bca[bca]
|--|--|--|--bcad[bcad]
|--|--|--bcd[bcd]
|--|--|--|--bcda[bcda]
|--|--bd[bd]
|--|--|--bda[bda]
|--|--|--|--bdac[bdac]
|--|--|--bdc[bdc]
|--|--|--|--bdca[bdca]
|--c[c]
|--|--ca[ca]
|--|--|--cab[cab]
|--|--|--|--cabd[cabd]
|--|--|--cad[cad]
|--|--|--|--cadb[cadb]
|--|--cb[cb]
|--|--|--cba[cba]
|--|--|--|--cbad[cbad]
|--|--|--cbd[cbd]
|--|--|--|--cbda[cbda]
|--|--cd[cd]
|--|--|--cda[cda]
|--|--|--|--cdab[cdab]
|--|--|--cdb[cdb]
|--|--|--|--cdba[cdba]
|--d[d]
|--|--da[da]
|--|--|--dab[dab]
|--|--|--|--dabc[dabc]
|--|--|--dac[dac]
|--|--|--|--dacb[dacb]
|--|--db[db]
|--|--|--dba[dba]
|--|--|--|--dbac[dbac]
|--|--|--dbc[dbc]
|--|--|--|--dbca[dbca]
|--|--dc[dc]
|--|--|--dca[dca]
|--|--|--|--dcab[dcab]
|--|--|--dcb[dcb]
|--|--|--|--dcba[dcba]
